---
interface Props {
  title: string;
  date: Date;
  author: string;
  description?: string;
  tags?: string[];
}

const { title, date, author, description, tags = [] } = Astro.props;
const formattedDate = date.toLocaleDateString("en-US", {
  year: "numeric",
  month: "long",
  day: "numeric",
});
---

<div class="px-10 py-2">
  <article class="blog-post w-max">
    <header>
      <h1>{title}</h1>
      <div class="metadata">
        <time datetime={date.toISOString()}>{formattedDate}</time>
        <span class="author">By {author}</span>
      </div>
      {
        tags.length > 0 && (
          <div class="tags">
            {tags.map((tag) => (
              <span class="tag">{tag}</span>
            ))}
          </div>
        )
      }
      {description && <p class="description">{description}</p>}
    </header>

    <div class="content">
      <slot />
    </div>

    <style>
      .blog-post {
        max-width: 65ch;
        margin: 0 auto;
        padding: 1rem;
        font-family: "Share Tech Mono", monospace;
      }

      header {
        margin-bottom: 2rem;
        border-bottom: 2px solid #eee;
        padding-bottom: 1rem;
      }

      h1 {
        font-size: 2.5rem;
        margin-bottom: 0.5rem;
        font-family: "Mr Dafoe", cursive;
        color: #333;
        text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.1);
      }

      .metadata {
        color: #666;
        font-size: 0.9rem;
        margin-bottom: 1rem;
        display: flex;
        align-items: center;
        gap: 1rem;
      }

      .author {
        font-style: italic;
      }

      .tags {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
        margin-bottom: 1rem;
      }

      .tag {
        background: #f0f0f0;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.8rem;
        border: 1px solid #ddd;
        transition: all 0.2s ease;
      }

      .tag:hover {
        background: #e0e0e0;
        transform: translateY(-1px);
      }

      .description {
        font-style: italic;
        color: #444;
        border-left: 3px solid #ddd;
        padding-left: 1rem;
        margin: 1rem 0;
      }

      .content {
        line-height: 1.8;
      }

      .content :global(h2) {
        font-size: 1.8rem;
        margin: 2rem 0 1rem;
        color: #333;
      }

      .content :global(p) {
        margin: 1rem 0;
      }

      .content :global(code) {
        background: #f5f5f5;
        padding: 0.2rem 0.4rem;
        border-radius: 3px;
        font-size: 0.9em;
      }

      .content :global(pre) {
        background: #f5f5f5;
        padding: 1rem;
        border-radius: 5px;
        overflow-x: auto;
        margin: 1rem 0;
      }

      .content :global(blockquote) {
        border-left: 3px solid #ddd;
        padding-left: 1rem;
        margin: 1rem 0;
        color: #666;
      }

      .content :global(ul),
      .content :global(ol) {
        margin: 1rem 0;
        padding-left: 2rem;
      }

      .content :global(li) {
        margin: 0.5rem 0;
      }

      .content :global(a) {
        color: #0066cc;
        text-decoration: none;
        border-bottom: 1px solid transparent;
        transition: border-color 0.2s ease;
      }

      .content :global(a:hover) {
        border-bottom-color: #0066cc;
      }
    </style>
  </article>
</div>
